plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    signingConfigs {// 签名文件配置信息
        release {
            keyAlias = 'key0'
            storeFile file('..\\hh.jks')
            storePassword '123456'
            keyPassword '123456'
        }
        debug {
            keyAlias = 'key0'
            storeFile file('..\\hh.jks')
            storePassword '123456'
            keyPassword '123456'
        }
    }

    compileSdk 32
    defaultConfig {
        applicationId "com.lxr.chat_gpt"
        minSdk 23
        targetSdk 32
        versionCode 2
        versionName "0.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构（选择一个或多个平台的so）
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    // app变更配置
    applicationVariants.all { variant ->
        // Apk 打包输出配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format("yyyyMMdd")
            }
            outputFileName += '.apk'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

kapt {
    arguments {
        arg("rxhttp_package", "rxhttp")  //指定RxHttp类包名，可随意指定
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.4.0'

    def lifecycle_version = "2.5.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // 网络
    def rxHttp_version = '3.0.2'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation "com.github.liujingxing.rxhttp:rxhttp:$rxHttp_version"
    // ksp/kapt/annotationProcessor 选其一
    kapt "com.github.liujingxing.rxhttp:rxhttp-compiler:$rxHttp_version"

    //图片加载
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    //recyclerview适配器框架
    implementation 'com.github.liangjingkanji:BRV:1.3.88'
    //mmkv
    implementation 'com.tencent:mmkv:1.0.19'
    //屏幕适配AutoSize
    implementation 'me.jessyan:autosize:1.2.1'
    //util
    implementation 'com.blankj:utilcodex:1.31.0'
    //沉浸式基础依赖包
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    //沉浸式kotlin扩展（可选）
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
    //弹窗
    implementation 'com.github.li-xiaojun:XPopup:2.8.15'
    //阴影.圆角.动态设置shape和selector
    implementation 'com.github.lihangleo2:ShadowLayout:3.3.2'
    //标题栏
    implementation 'com.github.getActivity:TitleBar:10.0'
    //eventbus消息
    implementation 'org.greenrobot:eventbus:3.1.1'
}